import {
  Box,
  Button,
  Card,
  CardBody,
  Divider,
  Grid,
  GridItem,
  Heading,
  Input,
  InputGroup,
  InputRightElement,
  Select,
  Text,
} from "@chakra-ui/react";
import Head from "next/head";
import { HiClock } from "react-icons/hi";
import client from "~/graphql/client";
import { GET_POINT_TYPES } from "~/graphql/point_types";

// Views
import Default from "~/layouts/Default";

export default function CreatePoints(props: any) {
  return (
    <>
      <Head>
        <title>Pontuar • Diamond</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Heading fontSize="32">Pontuar</Heading>

      <Card mt={8}>
        <CardBody>
          <Heading
            fontFamily="Ubuntu Condensed"
            fontSize="lg"
            fontWeight="normal"
          >
            Nova pontuação
          </Heading>

          <Select mt={4} size="xl" placeholder="selecione um tipo" required>
            {props.point_types?.map((option: any) => (
              <option key={option.id} value={option.id}>
                {option.name}
              </option>
            ))}
          </Select>

          <Divider />

          <Text fontSize="sm" color="#5C667A">
            Selecione um tipo de pontuação para continuar
          </Text>
        </CardBody>
      </Card>

      <Card mt={6}>
        <CardBody>
          <Heading
            fontFamily="Ubuntu Condensed"
            fontSize="lg"
            fontWeight="normal"
          >
            Computar partida operada
          </Heading>

          <Grid
            templateColumns={{
              base: "repeat(1, 1fr)",
              md: "repeat(4, 1fr)",
            }}
            gap={4}
          >
            <GridItem colSpan={3}>
              <Input mt={4} size="xl" placeholder="Nick do vencedor" />
            </GridItem>

            <GridItem>
              <InputGroup>
                <Input mt={4} size="xl" placeholder="hh:mm" />
                <InputRightElement mt={7} mr={2}>
                  <HiClock size={24} />
                </InputRightElement>
              </InputGroup>
            </GridItem>
          </Grid>

          <Box
            mt={6}
            mb={4}
            h="160px"
            rounded="lg"
            border="1px #5C667A dashed"
            _hover={{
              bg: "#1C1F2E",
            }}
            transition="background-color 0.2s"
          ></Box>

          <Text fontSize="sm" color="#CF4242">
            É necessário adicionar arquivos para continuar.
          </Text>

          <Button variant="gradient" size="xl" disabled mt={6} float="right">
            ENVIAR
          </Button>
        </CardBody>
      </Card>
    </>
  );
}

CreatePoints.getLayout = function getLayout(page: React.ReactElement) {
  return <Default>{page}</Default>;
};

export const getServerSideProps = async () => {
  const { data } = await client.query({
    query: GET_POINT_TYPES,
  });

  return {
    props: {
      point_types: data.point_types,
    },
  };
};
