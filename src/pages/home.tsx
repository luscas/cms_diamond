import React, { useCallback } from "react";
import Head from "next/head";
// Components
import { WelcomeContainer, Welcome } from "~/components/Main/styles";
// import Button from "~/components/Button";
import IconAdd from "~/components/Icons/IconAdd";
import { Card, CardTitle } from "~/components/Card/styles";

// Views
import UserPoints from "~/views/User/Points";
import Footer from "~/views/Footer";
import Default from "~/layouts/Default";

import {
  Button,
  Select,
  InputGroup,
  InputLeftElement,
  Input,
  Grid,
  GridItem,
  Flex,
  Table,
  TableContainer,
  Tbody,
  Td,
  Th,
  Thead,
  Tr,
  Tag,
  TagLeftIcon,
} from "@chakra-ui/react";

import { FiSearch } from "react-icons/fi";
import { BsFillCircleFill } from "react-icons/bs";
import { HiRefresh } from "react-icons/hi";
import supabase from "~/services/supabase";

export default function Home(props: { points: any[] }) {
  return (
    <>
      <Head>
        <title>CMS • Diamond</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <WelcomeContainer>
        <Welcome>Bem-vindo, Hendiw!</Welcome>
        <Button size="lg" variant="gradient">
          <IconAdd />
          Pontuar
        </Button>
      </WelcomeContainer>

      <UserPoints />

      <section>
        <pre>{JSON.stringify(props, null, 2)}</pre>
        <Grid templateColumns="repeat(12, 1fr)" mt={5} gap={5}>
          <GridItem colSpan={7}>
            <Card>
              <Flex justifyContent="space-between">
                <CardTitle>Ranking</CardTitle>
                <HiRefresh size={20} />
              </Flex>

              <Grid templateColumns="repeat(5, 1fr)" gap={4} mt={4}>
                <GridItem colSpan={2}>
                  <Select>
                    <option value="Dia">Dia</option>
                    <option value="Semana" selected>
                      Semana
                    </option>
                    <option value="Mês">Mês</option>
                  </Select>
                </GridItem>

                <GridItem colSpan={3}>
                  <InputGroup>
                    <InputLeftElement pointerEvents="none">
                      <FiSearch color="white" />
                    </InputLeftElement>

                    <Input placeholder="Pesquisar..." />
                  </InputGroup>
                </GridItem>
              </Grid>

              <TableContainer mt={4}>
                <Table>
                  <Thead>
                    <Tr>
                      <Th isNumeric>POS</Th>
                      <Th>NOME</Th>
                      <Th>CARGO</Th>
                      <Th isNumeric>PTS</Th>
                    </Tr>
                  </Thead>

                  <Tbody>
                    <Tr>
                      <Td isNumeric>1</Td>
                      <Td>Janjao</Td>
                      <Td>
                        <Tag colorScheme="whiteAlpha">
                          <TagLeftIcon boxSize="8px" as={BsFillCircleFill} />
                          FUN
                        </Tag>
                      </Td>
                      <Td isNumeric>128</Td>
                    </Tr>
                  </Tbody>
                </Table>
              </TableContainer>
            </Card>
          </GridItem>

          <GridItem colSpan={5}>
            <Card>
              <Flex justifyContent="space-between" alignItems="center">
                <CardTitle>Ranking geral</CardTitle>

                <HiRefresh size={20} />
              </Flex>

              <TableContainer mt={4}>
                <Table>
                  <Thead>
                    <Tr>
                      <Th isNumeric>POS</Th>
                      <Th>NOME</Th>
                      <Th isNumeric>PTS</Th>
                    </Tr>
                  </Thead>

                  <Tbody>
                    <Tr>
                      <Td isNumeric>1</Td>
                      <Td>Janjao</Td>
                      <Td isNumeric>128</Td>
                    </Tr>
                  </Tbody>
                </Table>
              </TableContainer>
            </Card>
          </GridItem>
        </Grid>
      </section>

      <Footer />
    </>
  );
}

export async function getServerSideProps() {
  const { data: points } = await supabase.from("points").select();

  return {
    props: {
      points,
    },
  };
}

Home.getLayout = function getLayout(page: React.ReactElement) {
  return <Default>{page}</Default>;
};
